"""Add education_history and work_history tables

Revision ID: b0af2d2ecbfc
Revises: f6546c2af364
Create Date: 2025-06-29 03:21:37.620908

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'b0af2d2ecbfc'
down_revision = 'f6546c2af364'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('files')
    op.drop_table('snippets')
    op.drop_table('gender')
    op.drop_table('work_experience')
    op.drop_table('race')
    op.drop_table('user_education')
    op.drop_table('user_job')
    op.drop_table('jobs_table')
    op.drop_table('users')

    op.execute("DROP TABLE gender CASCADE")
    op.execute("DROP TABLE race CASCADE")
    op.execute("DROP TABLE users CASCADE")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('users_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('user_auth_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('first_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('last_name', sa.VARCHAR(length=100), autoincrement=False, nullable=False),
    sa.Column('phone', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    sa.Column('location', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('bio', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('linkedin', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('github', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('race_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('gender_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('disability_status', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('veteran_status', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['gender_id'], ['gender.id'], name='users_gender_id_fkey'),
    sa.ForeignKeyConstraint(['race_id'], ['race.id'], name='users_race_id_fkey'),
    sa.ForeignKeyConstraint(['user_auth_id'], ['auth_users.id'], name='users_user_auth_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    sa.UniqueConstraint('user_auth_id', name='users_user_auth_id_key', postgresql_include=[], postgresql_nulls_not_distinct=False),
    postgresql_ignore_search_path=False
    )
    op.create_table('jobs_table',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('company', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('position', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    sa.Column('date_applied', sa.DATE(), autoincrement=False, nullable=True),
    sa.Column('link', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('location', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('job_description', sa.TEXT(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('jobs_table_pkey'))
    )
    op.create_table('user_job',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('job_posting_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('applied_on', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('application_status', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('notes', sa.VARCHAR(length=4000), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['job_posting_id'], ['job_posting.id'], name=op.f('user_job_job_posting_id_fkey')),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('user_job_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('user_job_pkey'))
    )
    op.create_table('user_education',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('school', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('degree', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    sa.Column('gpa', sa.VARCHAR(length=10), autoincrement=False, nullable=True),
    sa.Column('date', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('descriptions', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('user_education_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('user_education_pkey'))
    )
    op.create_table('race',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('race_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=256), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='race_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('work_experience',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('company', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('job_title', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('date', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('descriptions', sa.TEXT(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('work_experience_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('work_experience_pkey'))
    )
    op.create_table('gender',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=256), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('gender_pkey'))
    )
    op.create_table('snippets',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('content', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('snippets_pkey'))
    )
    op.create_table('files',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('path', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('uploaded_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('files_pkey'))
    )
    # ### end Alembic commands ###
