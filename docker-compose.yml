services:
  postgres:
    image: postgres:latest
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: vr_password
      POSTGRES_DB: jobs_db
    ports:
      - "5432:5432"
    networks:
      - app_network
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "5050:5050"
    env_file:
      - ./backend/.env
    volumes:
      - ./backend:/app
      - /Applications:/Applications
      - /tmp/.X11-unix:/tmp/.X11-unix
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app_network
    environment:
      - DISPLAY=host.docker.internal:0
      - QT_X11_NO_MITSHM=1
      - DB_HOST=postgres_db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=vr_password
      - DB_NAME=jobs_db
    shm_size: '2gb'

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    env_file:
      - ./frontend/.env
    volumes:
      - ./frontend:/app
    depends_on:
      - backend
    networks:
      - app_network

networks:
  app_network:
    driver: bridge

volumes:
  postgres_data:
